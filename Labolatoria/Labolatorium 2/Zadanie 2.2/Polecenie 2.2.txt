Zadanie 2.2.
Zmodyfikowaæ dane programu podanego na str. 9-10 w taki sposób, by 
wszystkie litery tekstu by³y wyœwietlane poprawnie. Wskazówka: zast¹piæ niektóre litery 
alfabetu  ³aciñskiego przez odpowiednie kody wyra¿one w postaci liczbowej (dziesiêtnej lub 
szesnastkowej). Tabela kodów podana jest na str. 4. 
Uwaga: w zapisie asemblerowym ka¿da liczba szesnastkowa powinna zaczynaæ siê od cyfry 
0, 1, 2, ..., 9. Jeœli liczba szesnastkowa zaczyna siê od cyfry A, B, ..., F, to nale¿y przed liczb¹ 
nale¿y wprowadziæ dodatkowe 0, np. liczbê F3H w kodzie asemblerowym trzeba zapisaæ w 
postaci 0F3H. Dodatkowe 0 nie ma wp³ywu na wartoœæ liczby.

Program:
; Przyk³ad wywo³ywania funkcji MessageBoxA i MessageBoxW 
.686 
.model flat 
extern     _ExitProcess@4  : PROC 
extern     _MessageBoxA@16 : PROC 
extern     _MessageBoxW@16 : PROC 
public     _main 

.data 
tytul_Unicode dw   'T','e','k','s','t',' ','w',' ' 
			  dw   'f','o','r','m','a','c','i','e',' ' 
			  dw   'U','T','F','-','1','6', 0 
tekst_Unicode dw 'K','a','z','d','y',' ','z','n','a','k',' ' 
			  dw 'z','a','j','m','u','j','e',' ' 
			  dw '1','6',' ','b','i','t','o','w', 0 
tytul_Win1250 db 'Tekst w standardzie Windows 1250', 0 
tekst_Win1250 db 'Kazdy znak zajmuje 8 bitow', 0

.code 
_main PROC 
	push    0       ; sta³a MB_OK 
	; adres obszaru zawieraj¹cego tytu³ 
	push    OFFSET tytul_Win1250  
	; adres obszaru zawieraj¹cego tekst 
	push    OFFSET tekst_Win1250 
	push    0       ; NULL 
	call    _MessageBoxA@16 
	push    0       ; stala MB_OK 
	; adres obszaru zawieraj¹cego tytu³ 
	push    OFFSET tytul_Unicode 
	; adres obszaru zawieraj¹cego tekst 
	push    OFFSET tekst_Unicode 
	push    0       ; NULL 
	call    _MessageBoxW@16 
	push    0       ; kod powrotu programu 
	call    _ExitProcess@4 
_main ENDP    
END 